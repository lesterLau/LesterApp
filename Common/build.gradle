apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        externalNativeBuild {
            ndkBuild {
            }
        }
    }
}

dependencies {
    api rootProject.ext.dependencies.appcompat_v7
    api rootProject.ext.dependencies.design
    api rootProject.ext.dependencies.constraint_layout
    api rootProject.ext.dependencies.multidex
    api rootProject.ext.dependencies.swipebacklayout
    api rootProject.ext.dependencies.butterknife
    api rootProject.ext.dependencies.tinker_android_lib
    api rootProject.ext.dependencies.tinker_android_anno
    api rootProject.ext.dependencies.crashreport_upgrade
    api rootProject.ext.dependencies.arouter_api
    api rootProject.ext.dependencies.eventbus
    api rootProject.ext.dependencies.baserecyclerviewadapterhelper
    annotationProcessor rootProject.ext.dependencies.tinker_android_anno
    annotationProcessor rootProject.ext.dependencies.butterknife_compiler
    annotationProcessor rootProject.ext.dependencies.arouter_compiler
    api project(':Base')
    api project(':Http')
    api project(':Utils')
    api project(':CustomView')
}
